!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUFFER_SIZE	ds18b20.h	5;"	d
BUFFER_SIZE	ds18b20_backup.c	18;"	d	file:
CROSS_COMPILE	Makefile	/^CROSS_COMPILE = arm-linux-gnueabihf-$/;"	m
DEVICENAME	ds18b20.h	6;"	d
DEVICENAME	ds18b20_backup.c	29;"	d	file:
DS18B20_CONVERT_TEMP	ds18b20.h	30;"	d
DS18B20_DQ_GPIO_PIN	ds18b20.h	7;"	d
DS18B20_READ_SCRATCHPAD	ds18b20.h	31;"	d
DS18B20_SEARCH	ds18b20.h	28;"	d
DS18B20_SKIP_ROM	ds18b20.h	29;"	d
FUN_ALT0_SET	ds18b20.h	26;"	d
FUN_ALT_1	ds18b20.h	21;"	d
FUN_ALT_2	ds18b20.h	22;"	d
FUN_ALT_3	ds18b20.h	23;"	d
FUN_INPUT	ds18b20.h	19;"	d
FUN_OUTPUT	ds18b20.h	20;"	d
GCC	Makefile	/^GCC = gcc$/;"	m
GPIO_REG_BASE	ds18b20.h	13;"	d
GPIO_REG_PHY_BASE	ds18b20.h	17;"	d
HIGH	ds18b20.h	8;"	d
KERNEL_DIR	Makefile	/^KERNEL_DIR = \/home\/prityaa\/documents\/workspace\/embeded\/raspbery_pi\/code_base\/gpio_static_module\/linux$/;"	m
LOW	ds18b20.h	9;"	d
OUTPUT_SET	ds18b20.h	25;"	d
OUTPUT_SET_REG_1	ds18b20.h	14;"	d
OUTPUT_SET_REG_2	ds18b20.h	15;"	d
PATH	ds18b20_app.c	7;"	d	file:
PATH	read.c	11;"	d	file:
PATH	write.c	8;"	d	file:
READ_EXE	Makefile	/^READ_EXE = DS18B20_TEMP_READ$/;"	m
RPI_COMPILE_OPTION	Makefile	/^RPI_COMPILE_OPTION = ARCH=arm CROSS_COMPILE=$(CROSS_COMPILE)$/;"	m
RPI_DQ_GPIO_PIN	ds18b20.h	10;"	d
SOURCE_READ_CODE	Makefile	/^SOURCE_READ_CODE = read.c$/;"	m
SOURCE_WRITE_CODE	Makefile	/^SOURCE_WRITE_CODE = write.c$/;"	m
WRITE_EXE	Makefile	/^WRITE_EXE = DS18B20_TEMP_WRITE$/;"	m
_DS18B20_H_	ds18b20.h	2;"	d
__this_module	ds18b20.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__used	ds18b20.mod.c	/^__used$/;"	v	file:
__used	ds18b20.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
base	ds18b20.h	/^void __iomem *base;$/;"	v
crc	ds18b20.h	/^                crc:8;$/;"	m	struct:w1_reg_num
data	ds18b20.c	/^struct ds18b20_data data = {$/;"	v	typeref:struct:ds18b20_data
data	ds18b20.c	/^struct ds18b20_data data;$/;"	v	typeref:struct:ds18b20_data
device_buffer	ds18b20.c	/^static char device_buffer[BUFFER_SIZE] = "aartyaa i lovce you, i cant live without you";$/;"	v	file:
device_buffer	ds18b20_backup.c	/^static char device_buffer[BUFFER_SIZE] = "aartyaa i lovce you, i cant live without you";$/;"	v	file:
device_buffer	ds18b20_probe.c	/^static char device_buffer[BUFFER_SIZE] = "aartyaa i lovce you, i cant live without you";$/;"	v	file:
device_info	ds18b20.c	/^struct device *device_info;$/;"	v	typeref:struct:device
device_info	ds18b20_backup.c	/^struct device *device_info;$/;"	v	typeref:struct:device
device_info	ds18b20_probe.c	/^struct device *device_info;$/;"	v	typeref:struct:device
ds18b20_ROM_search	ds18b20.c	/^static int ds18b20_ROM_search(struct ds18b20_data *p_data)$/;"	f	file:
ds18b20_chr_dev	ds18b20.c	/^struct cdev ds18b20_chr_dev; \/*this is the name of my char driver that i will be registering*\/$/;"	v	typeref:struct:cdev
ds18b20_chr_dev	ds18b20_backup.c	/^struct cdev ds18b20_chr_dev; \/*this is the name of my char driver that i will be registering*\/$/;"	v	typeref:struct:cdev
ds18b20_chr_dev	ds18b20_probe.c	/^struct cdev ds18b20_chr_dev; \/*this is the name of my char driver that i will be registering*\/$/;"	v	typeref:struct:cdev
ds18b20_close	ds18b20.c	/^static int ds18b20_close(struct inode *inode, struct file *filp) $/;"	f	file:
ds18b20_close	ds18b20_backup.c	/^static int ds18b20_close(struct inode *inode, struct file *filp) $/;"	f	file:
ds18b20_close	ds18b20_probe.c	/^static int ds18b20_close(struct inode *inode, struct file *filp) $/;"	f	file:
ds18b20_data	ds18b20.h	/^struct ds18b20_data$/;"	s
ds18b20_dev_num	ds18b20.c	/^dev_t ds18b20_dev_num; \/*will hold the major number that the kernel gives*\/$/;"	v
ds18b20_dev_num	ds18b20_backup.c	/^dev_t ds18b20_dev_num; \/*will hold the major number that the kernel gives*\/$/;"	v
ds18b20_dev_num	ds18b20_probe.c	/^dev_t ds18b20_dev_num; \/*will hold the major number that the kernel gives*\/$/;"	v
ds18b20_device_class	ds18b20.c	/^static struct class *ds18b20_device_class;$/;"	v	typeref:struct:class	file:
ds18b20_device_class	ds18b20_backup.c	/^static struct class *ds18b20_device_class;$/;"	v	typeref:struct:class	file:
ds18b20_device_class	ds18b20_probe.c	/^static struct class *ds18b20_device_class;$/;"	v	typeref:struct:class	file:
ds18b20_exit	ds18b20.c	/^module_exit(ds18b20_exit);$/;"	v
ds18b20_exit	ds18b20.c	/^void ds18b20_exit(void)$/;"	f
ds18b20_exit	ds18b20_backup.c	/^module_exit(ds18b20_exit);$/;"	v
ds18b20_exit	ds18b20_backup.c	/^void ds18b20_exit(void)$/;"	f
ds18b20_gpio_init	ds18b20.c	/^static int ds18b20_gpio_init(struct ds18b20_data *p_data)$/;"	f	file:
ds18b20_gpio_read_bit	ds18b20.c	/^static u8 ds18b20_gpio_read_bit(struct ds18b20_data *pdata)$/;"	f	file:
ds18b20_gpio_set_dir	ds18b20.c	/^static void ds18b20_gpio_set_dir(struct ds18b20_data *pdata, u8 bit)$/;"	f	file:
ds18b20_init	ds18b20.c	/^int ds18b20_init(void) $/;"	f
ds18b20_init	ds18b20.c	/^module_init(ds18b20_init);$/;"	v
ds18b20_init	ds18b20_backup.c	/^int ds18b20_init(void) $/;"	f
ds18b20_init	ds18b20_backup.c	/^module_init(ds18b20_init);$/;"	v
ds18b20_init	ds18b20_probe.c	/^int ds18b20_init(void) $/;"	f
ds18b20_open	ds18b20.c	/^static int ds18b20_open(struct inode *inode, struct file *filp) $/;"	f	file:
ds18b20_open	ds18b20_backup.c	/^static int ds18b20_open(struct inode *inode, struct file *filp) $/;"	f	file:
ds18b20_open	ds18b20_probe.c	/^static int ds18b20_open(struct inode *inode, struct file *filp) $/;"	f	file:
ds18b20_platform_data	ds18b20_probe.c	/^static struct platform_driver ds18b20_platform_data {$/;"	s	file:
ds18b20_read	ds18b20.c	/^static ssize_t ds18b20_read(struct file *fp, char *buff, size_t length, loff_t *ppos) $/;"	f	file:
ds18b20_read	ds18b20_backup.c	/^static ssize_t ds18b20_read(struct file *fp, char *buff, size_t length, loff_t *ppos) $/;"	f	file:
ds18b20_read	ds18b20_probe.c	/^static ssize_t ds18b20_read(struct file *fp, char *buff, size_t length, loff_t *ppos) $/;"	f	file:
ds18b20_read_bit	ds18b20.c	/^static u8 ds18b20_read_bit(struct ds18b20_data *pdata)$/;"	f	file:
ds18b20_read_block	ds18b20.c	/^u8 ds18b20_read_block(struct ds18b20_data *pdata, u8 *buf, int len)$/;"	f
ds18b20_read_byte	ds18b20.c	/^u8 ds18b20_read_byte(struct ds18b20_data *pdata)$/;"	f
ds18b20_reset_bus	ds18b20.c	/^static int ds18b20_reset_bus(struct ds18b20_data *pdata)$/;"	f	file:
ds18b20_touch_bit	ds18b20.c	/^static u8 ds18b20_touch_bit(struct ds18b20_data *pdata, int bit)$/;"	f	file:
ds18b20_triplet	ds18b20.c	/^u8 ds18b20_triplet(struct ds18b20_data *pdata, int bdir)$/;"	f
ds18b20_write	ds18b20.c	/^static ssize_t ds18b20_write(struct file *fp, const char *buff, size_t length, loff_t *ppos) $/;"	f	file:
ds18b20_write	ds18b20_backup.c	/^static ssize_t ds18b20_write(struct file *fp, const char *buff, size_t length, loff_t *ppos) $/;"	f	file:
ds18b20_write	ds18b20_probe.c	/^static ssize_t ds18b20_write(struct file *fp, const char *buff, size_t length, loff_t *ppos) $/;"	f	file:
ds18b20_write_bit	ds18b20.c	/^static void ds18b20_write_bit(struct ds18b20_data *pdata, int bit)$/;"	f	file:
ds18b20_write_byte	ds18b20.c	/^void ds18b20_write_byte(struct ds18b20_data *pdata, u8 byte)$/;"	f
ext_pullup_pin	ds18b20.h	/^        unsigned int ext_pullup_pin;$/;"	m	struct:ds18b20_data
family	ds18b20.h	/^        __u64   family:8,$/;"	m	struct:w1_reg_num
fops	ds18b20.c	/^struct file_operations fops = \/* these are the file operations provided by our driver *\/$/;"	v	typeref:struct:file_operations
fops	ds18b20_backup.c	/^struct file_operations fops = \/* these are the file operations provided by our driver *\/$/;"	v	typeref:struct:file_operations
fops	ds18b20_probe.c	/^struct file_operations fops = \/* these are the file operations provided by our driver *\/$/;"	v	typeref:struct:file_operations
gpio_init_function	ds18b20_probe.c	/^static int gpio_init_function(void)$/;"	f	file:
high	ds18b20.h	/^enum rpi_gpio4_state {low, high};$/;"	e	enum:rpi_gpio4_state
id	ds18b20.h	/^                id:48,$/;"	m	struct:w1_reg_num
input	ds18b20.h	/^enum rpi_gpio4_direction {input, output};$/;"	e	enum:rpi_gpio4_direction
low	ds18b20.h	/^enum rpi_gpio4_state {low, high};$/;"	e	enum:rpi_gpio4_state
main	ds18b20_app.c	/^int main(int argc, char **argv)$/;"	f
main	read.c	/^int main(int argc, char **argv)$/;"	f
main	write.c	/^int main(int argc, char **argv)$/;"	f
major_number	ds18b20.c	/^int major_number; \/* will store the major number extracted by dev_t*\/$/;"	v
major_number	ds18b20_backup.c	/^int major_number; \/* will store the major number extracted by dev_t*\/$/;"	v
major_number	ds18b20_probe.c	/^int major_number; \/* will store the major number extracted by dev_t*\/$/;"	v
output	ds18b20.h	/^enum rpi_gpio4_direction {input, output};$/;"	e	enum:rpi_gpio4_direction
pin	ds18b20.h	/^	unsigned int pin;$/;"	m	struct:ds18b20_data
probe_ds18b20	ds18b20_probe.c	/^static int probe_ds18b20(struct platform_device *pdev)$/;"	f	file:
pullup_duration	ds18b20.h	/^        unsigned int pullup_duration;$/;"	m	struct:ds18b20_data
read_ds18b20_id	ds18b20.c	/^static int read_ds18b20_id(void)$/;"	f	file:
read_ds18b20_temp	ds18b20.c	/^static int read_ds18b20_temp(void)$/;"	f	file:
read_ds18b20_temp	ds18b20_probe.c	/^static int read_ds18b20_temp(void)$/;"	f	file:
remove_gpio	ds18b20_probe.c	/^static int remove_gpio(struct platform_device *pdev)$/;"	f	file:
reset_ds18b20_sensor	ds18b20_probe.c	/^static int reset_ds18b20_sensor(void)$/;"	f	file:
ret	ds18b20.c	/^int ret; \/*used to return values*\/$/;"	v
ret	ds18b20_backup.c	/^int ret; \/*used to return values*\/$/;"	v
ret	ds18b20_probe.c	/^int ret; \/*used to return values*\/$/;"	v
rpi_gpio4_direction	ds18b20.h	/^enum rpi_gpio4_direction {input, output};$/;"	g
rpi_gpio4_state	ds18b20.h	/^enum rpi_gpio4_state {low, high};$/;"	g
sem	ds18b20.c	/^struct semaphore sem;$/;"	v	typeref:struct:semaphore
sem	ds18b20_backup.c	/^struct semaphore sem;$/;"	v	typeref:struct:semaphore
sem	ds18b20_probe.c	/^struct semaphore sem;$/;"	v	typeref:struct:semaphore
w1_reg_num	ds18b20.h	/^struct w1_reg_num$/;"	s
